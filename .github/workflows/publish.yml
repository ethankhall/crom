name: Publish Image

on:
  push:
    branches:
    - master

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: do-build
        run: |
          mkdir -p target/x86_64-unknown-linux-musl/release/
          docker build -t musl-builder -f ci/musl.Dockerfile .
          docker run --name musl-build musl-builder
          docker cp musl-build:/home/rust/src/target/x86_64-unknown-linux-musl/release/crom target/x86_64-unknown-linux-musl/release/crom
          docker rm musl-build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: linux-artifacts
          path: target/x86_64-unknown-linux-musl/release/crom

  build-windows:
    runs-on: windows
    steps:
      - uses: actions/checkout@v1
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: -- update-version --pre-release release
      - uses: actions-rs/cargo@v1
        with:
          command: check
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows-artifacts
          path: target\release\crom.exe

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: -- update-version --pre-release release
      - uses: actions-rs/cargo@v1
        with:
          command: check
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: mac-artifacts
          path: target/release/crom
  release:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-mac
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: mac-artifacts
          path: artifacts/mac
      - uses: actions/download-artifact@v1
        with:
          name: linux-artifacts
          path: artifacts/linux
      - uses: actions/download-artifact@v1
        with:
          name: windows-artifacts
          path: artifacts/windows
      - name: Create release
        run: |
          artifacts/linux/crom tag-version --local --github --ignore-changes
          artifacts/linux/crom upload-artifacts --root-artifact-path=./artifacts linux mac
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      